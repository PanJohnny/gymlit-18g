---
import Settings from "../../components/Settings.astro";
import Sidebar from "../../components/Sidebar.astro";

interface Props {
    title: string;
    description: string;
}

const props = Astro.props as Props;
---

<!DOCTYPE html>
<html lang="en" class="light">
    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>{props.title}</title>
        <meta name="title" content={props.title} />
        <meta name="description" content={props.description} />

        <!-- Open Graph / Facebook -->
        <meta property="og:type" content="website" />
        <meta property="og:url" content={Astro.url.href} />
        <meta property="og:title" content={props.title} />
        <meta property="og:description" content={props.description} />

        <!-- Twitter -->
        <meta property="twitter:card" content="summary" />
        <meta property="twitter:url" content={Astro.url.href} />
        <meta property="twitter:title" content={props.title} />
        <meta property="twitter:description" content={props.description} />
        
        <!-- Icons -->
        <meta property="og:image" content="https://panjohnny.vercel.app/icon.svg">
        <meta name="twitter:image" content="https://panjohnny.vercel.app/icon.svg">
        <link rel="icon" type="image/svg" href="/icon.svg" />

        <!-- Add to home screen -->
        <meta name='mobile-web-app-capable' content='yes'>
        <meta name='apple-mobile-web-app-capable' content='yes'>
    </head>
    <body>
        <main>
            <Sidebar />
            <Settings />
            <div class="main">
                <div class="header">
                    <h1>
                        <span class="toggle hamburger hidden" id="h1burger"
                            >â˜°</span
                        >
                        {props.title}
                    </h1>
                    <h4>{props.description}</h4>
                </div>
                <slot />
            </div>
        </main>
    </body>
</html>

<style>
    :root {
        --dark: #02182b;
        --light: #eeeeff;
        --border: #508991;
        --decoration: #99f7ab;

        --background: var(--light);
        --text-color: var(--dark);

        --bg-unused: var(--text-color);
        --text-unused: var(--background);
    }

    html {
        font-family: system-ui, sans-serif;
        margin: 2em;
        text-decoration-color: var(--decoration);
        border-color: var(--border);
        outline-color: var(--decoration);
    }

    :global(.dark) {
        background-color: var(--dark);
        color: var(--light);

        --background: var(--dark);
        --text-color: var(--light);
    }

    :global(.light) {
        background-color: var(--light);
        color: var(--dark);

        --background: var(--light);
        --text-color: var(--dark);
    }

    :global(.inverted) {
        background-color: var(--bg-unused);
        color: var(--text-unused);
    }

    .main {
        margin-left: var(--sidebar-width);
        padding-left: 1em;
    }

    @media print {
        :root {
            --sidebar-width: 0px;
        }

        .sidebar {
            display: none;
        }
    }

    :global(.toggle) {
        cursor: pointer;
    }

    :global(.toggle:hover) {
        color: var(--decoration);
    }

    :global(.no-margin-left) {
        margin-left: 0px;
    }

    :global(.hidden) {
        display: none;
    }

    :global([role=button]) {
        cursor: pointer;
        background-color: #00ff40;
        color: var(--dark);
        border: 1px solid var(--light);
        border-radius: 6px;
        padding: .2em;
        line-height: 2em;
    }
    
    :global([role=button]:hover) {
        border-color: var(--dark);
    }
</style>

<script>
    if (localStorage.getItem("mode"))
        document.querySelector("html").className = localStorage.getItem("mode");
    if (window.innerWidth <= 500)
        document.querySelector("#h1burger").classList.remove("hidden");

    window.addEventListener("load", async () => {
        // Analytics
        let userId = localStorage.getItem("analyticsId");

        if (!userId) {
            userId =
                new Date(Date.now()).toISOString() +
                Date.now().toString(36) +
                Math.random().toString(36).substring(2);
            localStorage.setItem("analyticsId", userId);
        }

        await fetch("/api/analytics?site=" + encodeURI(location.pathname), {
            headers: {
                "User-Identifier": userId,
            },
            method: "POST",
        }).catch((err) => {
            console.error("Failed to send analytics data " + err);
        });
    });
</script>
