---
import Layout from "../../layouts/Layout.astro";
---

<Layout title="Online kronika">
    <main>
        <script is:inline src="/cookieUtil.js"></script>
        <h1><span class="text-gradient" id="title"></span></h1>
        <span class="text-gradient" id="class"></span>
        <div id="phrases"></div>
        <script is:inline>
            if (!hasCookie("class")) window.location.href = "/select/year";
            if (window.location.hash.length > 1) {
                setCookie("category", "catchphrases", 1);
                document.getElementById("class").innerText =
                    "Třída: " + getCookie("class") + ". G";
                if (getCookie("class") == "0") {
                    document.getElementById("class").innerText =
                        "Všechny ročníky";
                }
                fetch("/teachers.json")
                    .then((data) => data.json())
                    .then((json) => {
                        if (!json[window.location.hash.substring(1)])
                            window.location.href = "/open/catchphrases";
                        document.getElementById("title").innerText =
                            json[window.location.hash.substring(1)];
                    });
                const phrases = document.getElementById("phrases");
                if (getCookie("class") != "0") {
                    fetch("/catchphrases/" + getCookie("class") + ".json")
                        .then((data) => data.json())
                        .then((json) => {
                            const a = json[window.location.hash.substring(1)];
                            if (a) {
                                for (let i = 0; i < a.length; i++) {
                                    phrases.innerHTML +=
                                        '<div class="ph">' +
                                        a[i] +
                                        "</div>" +
                                        "<br>";
                                }
                            } else {
                                window.location.href = "/open/catchphrases";
                            }
                        });
                } else {
                    for (let x = 1; x < 8; x++) {
                        fetch("/catchphrases/" + x + ".json")
                        .then((data) => data.json())
                        .then((json) => {
                            const a = json[window.location.hash.substring(1)];
                            if (a) {
                                phrases.innerHTML +=
                                        '<div><b>' +
                                        x +
                                        ". G</b></div>" +
                                        "<br>";
                                for (let i = 0; i < a.length; i++) {
                                    phrases.innerHTML +=
                                        '<div class="ph">' +
                                        a[i] +
                                        "</div>" +
                                        "<br>";
                                }
                            } else {
                                // window.location.href = "/open/catchphrases";
                            }
                        });
                    }
                }
            } else {
                window.location.href = "/open/catchphrases";
            }
        </script>
    </main>
</Layout>

<style>
    :root {
        --astro-gradient: linear-gradient(0deg, #4f39fa, #da62c4);
    }

    h1 {
        margin: 2rem 0;
    }

    main {
        margin: auto;
        padding: 1em;
        max-width: 60ch;
    }

    .text-gradient {
        font-weight: 900;
        background-image: var(--astro-gradient);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-size: 100% 200%;
        background-position-y: 100%;
        border-radius: 0.4rem;
        animation: pulse 4s ease-in-out infinite;
    }

    @keyframes pulse {
        0%,
        100% {
            background-position-y: 0%;
        }
        50% {
            background-position-y: 80%;
        }
    }

    .instructions {
        line-height: 1.6;
        margin: 1rem 0;
        background: #4f39fa;
        padding: 1rem;
        border-radius: 0.4rem;
        color: var(--color-bg);
    }

    .instructions code {
        font-size: 0.875em;
        border: 0.1em solid var(--color-border);
        border-radius: 4px;
        padding: 0.15em 0.25em;
    }

    .link-card-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
        gap: 1rem;
        padding: 0;
    }
</style>
