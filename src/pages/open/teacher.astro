---
import Layout from "../../layouts/Layout.astro";
import { cookieOptions, className, validYear } from "../../utils";
import teachers from "../../../public/teachers.json";

const params = Astro.url.searchParams;

if (!params.has("year") || !validYear(params.get("year"))) {
    return Astro.redirect("/select/year?redirect_reason=invalid.year");
}

const year = params.get("year");

Astro.cookies.set("last", Astro.url.href, cookieOptions);

if (!params.has("id"))
    return Astro.redirect("/select/year?redirect_reason=invalid.teacher_id");

// get teacher id
const id = params.get("id");
const teacher = teachers[id];

if (!teacher) return Astro.redirect("/select/category");

let json: Array<string> = [];
if (year == "0") {
    await Astro.glob("../../../public/catchphrases/*.json").then((arr) => {
        arr.forEach((a) => {
            if (Object.keys(a).includes(id))
                a[id].forEach((d: string) => {
                    json.push(d);
                });
        });
    });
} else {
    await fetch(Astro.url.protocol + "//" 
     + Astro.url.host + "/catchphrases/" + year + ".json")
        .then((response) => response.json())
        .then((a:object) => {
            if (Object.keys(a).includes(id))
                a[id].forEach((d: string) => {
                    json.push(d);
                });
        });
}

if (json.length == 0) {
    return Astro.redirect("/open/catchphrases?redirect_reason=no.catchphrases")
}
---

<Layout title={teacher + " @ Online Kronika"}>
    <main>
        <h1><span class="text-gradient" id="title">{teacher}</span></h1>
        <span class="text-gradient" id="class">{className(year)}</span>
        <div id="phrases">
            {json.map((el: string) => (<div class="ph">{el}</div>))}
        </div>
    </main>
</Layout>

<style>
    :root {
        --astro-gradient: linear-gradient(0deg, #4f39fa, #da62c4);
    }

    h1 {
        margin: 2rem 0;
    }

    .ph {
        margin-bottom: 1em;
    }

    main {
        margin: auto;
        padding: 1em;
        max-width: 60ch;
    }

    .text-gradient {
        font-weight: 900;
        background-image: var(--astro-gradient);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-size: 100% 200%;
        background-position-y: 100%;
        border-radius: 0.4rem;
        animation: pulse 4s ease-in-out infinite;
    }

    @keyframes pulse {
        0%,
        100% {
            background-position-y: 0%;
        }
        50% {
            background-position-y: 80%;
        }
    }

    .instructions {
        line-height: 1.6;
        margin: 1rem 0;
        background: #4f39fa;
        padding: 1rem;
        border-radius: 0.4rem;
        color: var(--color-bg);
    }

    .instructions code {
        font-size: 0.875em;
        border: 0.1em solid var(--color-border);
        border-radius: 4px;
        padding: 0.15em 0.25em;
    }

    .link-card-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
        gap: 1rem;
        padding: 0;
    }
</style>
