---
import Layout from "../../layouts/Layout.astro";
import Card from "../../components/Card.astro";
import teachers from "../../../public/teachers.json";
---

<Layout title="Online kronika">
	<main>
		<script is:inline src="/cookieUtil.js"></script>

		<h1><span class="text-gradient">Vyberte učitele</span></h1>
		<span class="text-gradient" id="class"></span>
		<script is:inline>
			if (!hasCookie("class")) window.location.href = "/select/year";
			setCookie("category", "catchphrases", 1);
			document.getElementById("class").innerText =
				"Třída: " + getCookie("class") + ". G";
			if (getCookie("class") == "0") {
				document.getElementById("class").innerText = "Všechny ročníky";
			}
		</script>
		{
			// go through teachers and add Card for every key
			Object.keys(teachers).map((key) => (
				<Card
					title={teachers[key]}
					body={"Hlášky učitele (zkratka jména: " + key + ")"}
					href={"/open/teacher#" + key}
				/>
			))
		}
		<script is:inline>
			if (getCookie("class") != "0") {
				// remove teachers not in the group
				const cards = document.getElementsByClassName("link-card");
				fetch("/catchphrases/" + getCookie("class") + ".json")
					.then((data) => data.json())
					.then((json) => {
						for (let index = 0; index < cards.length; index++) {
							const element = cards[index];
							const a = element.getElementsByTagName("a")[0];
							const id = a.getAttribute("href").split("#")[1];

							var has = false;
							Object.keys(json).map((key) => {
								if (key == id) {
									has = true;
									return;
								}
							});

							if (!has) {
								element.style = "display: none";
							}
						}
					});
			}
		</script>
	</main>
</Layout>

<style>
	:root {
		--astro-gradient: linear-gradient(0deg, #4f39fa, #da62c4);
	}

	h1 {
		margin: 2rem 0;
	}

	main {
		margin: auto;
		padding: 1em;
		max-width: 60ch;
	}

	.text-gradient {
		font-weight: 900;
		background-image: var(--astro-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 100% 200%;
		background-position-y: 100%;
		border-radius: 0.4rem;
		animation: pulse 4s ease-in-out infinite;
	}

	@keyframes pulse {
		0%,
		100% {
			background-position-y: 0%;
		}
		50% {
			background-position-y: 80%;
		}
	}

	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		background: #4f39fa;
		padding: 1rem;
		border-radius: 0.4rem;
		color: var(--color-bg);
	}

	.instructions code {
		font-size: 0.875em;
		border: 0.1em solid var(--color-border);
		border-radius: 4px;
		padding: 0.15em 0.25em;
	}

	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>
