---
import Layout from "../../../../layouts/Layout.astro";
import teachers from "../../../../../public/teachers.json";
import {latinClass} from "../../../../utils"

const y = Astro.params.year;
if (!y) return Astro.redirect("/kronika");

const classYear: number = +y;

if (classYear < 0 || classYear > 8) {
    return Astro.redirect("/kronika");
}
let events = "";
let phrases = {};
if (classYear == 0) {
    for (var i = 1; i < 8; i++) {
        const json = await fetch(
            Astro.url.protocol +
                "//" +
                Astro.url.host +
                "/catchphrases/" +
                i +
                ".json"
        ).then((response) => response.json());
        Object.keys(json).forEach((k) => {
            if (!phrases[k]) phrases[k] = [];

            json[k].forEach((a) => phrases[k].push(a));
        });
        const temp = await fetch(
            Astro.url.protocol + "//" + Astro.url.host + "/events/" + i
        ).then((b) => b.text());
        events += temp.split("<body>")[1].split("</body>")[0];
    }
} else {
    phrases = await fetch(
        Astro.url.protocol +
            "//" +
            Astro.url.host +
            "/catchphrases/" +
            classYear +
            ".json"
    ).then((response) => response.json());
    events = await fetch(
        Astro.url.protocol + "//" + Astro.url.host + "/events/" + classYear
    ).then((b) => b.text());

    events = events.split("<body>")[1].split("</body>")[0];
}

function quoteFix(input) {
    let n = 0;
    return input.replace(/"/g, (m, i, og) => {
        return n++ % 2 ? "“" : "„";
    });
}

const authorized = Astro.cookies.has("auth")
---

<Layout
    title={"Souhrn " + (classYear != 0 ? classYear + ". G" : "všeho")}
    description="Souhrn školního roku"
>
    <div class="body">
        <div id="udalosti">
            <details>
                <summary>Události</summary>
                <h2>Události</h2>
                <div set:html={events} />
            </details>
        </div>
        <div id="hlasky">
            <details>
                <summary>Hlášky</summary>
                <h2>Hlášky</h2>
                {
                    Object.keys(phrases).map((p) => (
                        <div class="teach">
                            <h3>{teachers[p]}</h3>{" "}
                            {authorized&&classYear!=0? <a href={"/kronika/editor/catchphrases?teacher=" + encodeURIComponent(teachers[p]) + "&class=" + latinClass(classYear)}>Upravit</a> : ""}
                            <ul>
                                {phrases[p].map((phrase) => (
                                    <li class="quote"
                                        id={
                                            p +
                                            "-" +
                                            btoa(
                                                encodeURIComponent(
                                                    phrase.substring(1, 9)
                                                )
                                            )
                                        }
                                    >
                                        {quoteFix(phrase)}{" "}
                                        <a class="report"
                                            href={
                                                "/kronika/report?text=" +
                                                quoteFix(phrase) +
                                                "&teacher=" +
                                                teachers[p] +
                                                "&year=" +
                                                y +
                                                "&return=" +
                                                Astro.url.href +
                                                encodeURIComponent("#") +
                                                p +
                                                "-" +
                                                btoa(
                                                    encodeURIComponent(
                                                        phrase.substring(1, 9)
                                                    )
                                                )
                                            }
                                            title="Nahlásit chybu"
                                            style="color: red; text-decoration: none;"
                                        >
                                             nahlásit chybu
                                        </a>
                                    </li>
                                ))}
                            </ul>
                        </div>
                    ))
                }
            </details>
        </div>

        <aside>
            Stažení: <a href={"/kronika/summary/download/" + classYear}
                >CSV</a
            >, <a href={"/catchphrases/" + classYear + ".json"}>JSON</a>
        </aside>
    </div>
</Layout>

<script lang="js">
    document
        .querySelector("#udalosti")
        .querySelectorAll("h1")
        .forEach((e) => {
            e.remove();
        });

    if (location.hash) {
        const el = document.getElementById(location.hash.substring(1));
        el.classList.add("highlight");
        setTimeout(() => {
            el.scrollIntoView({
                behavior: "auto",
                block: "center",
                inline: "center",
            });
        }, 100);
    }

    document.addEventListener("scroll", (event) => {
        document.querySelectorAll("details[open] > summary").forEach((el) => {
            if (0 >= el.getBoundingClientRect().top) {
                if (!el.classList.contains("scrolled-past")) {
                    el.setAttribute(
                        "data-scroll-px",
                        window.scrollY + el.getBoundingClientRect().top
                    );
                }
                if (
                    el.hasAttribute("data-scroll-px") &&
                    parseFloat(el.getAttribute("data-scroll-px")) >=
                        window.scrollY
                ) {
                    el.classList.remove("scrolled-past");
                } else el.classList.add("scrolled-past");
            }
        });
    });
</script>

<style>
    summary {
        background-color: var(--text-color);
        color: var(--background);
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: left;
        outline: none;
        font-size: 15px;
        margin-bottom: 1em;
        margin-right: 10px;
        border-radius: 12px;
    }

    summary:hover {
        filter: sepia(20);
    }

    details[open] > summary.scrolled-past {
        position: fixed;
        margin: 0px;
        top: 0px;
        z-index: 2;
        left: 0px;
    }

    .highlight {
        font-weight: 900;
        color: green;
    }

    aside {
        background-color: deepskyblue;
        padding: 1em;
        border: 1px solid;
        border-radius: 12px;
    }

    .quote:hover > .report {
        display: inline;
    }

    .quote {
        cursor: pointer;
    }

    .quote > .report {
        display: none;
        font-weight: bold;
    }
</style>
