---
import Layout from "../../../../layouts/Layout.astro";
import teachers from "../../../../../public/teachers.json";

const y = Astro.params.year;
if (!y)
    return Astro.redirect("/kronika");

const classYear: number = +y;

if (classYear < 0 || classYear > 8) {
    return Astro.redirect("/kronika");
}
let events = "";
let phrases = {};
if (classYear == 0) {
    for (var i = 1; i < 8; i++) {
        const json = await fetch(
            Astro.url.protocol +
                "//" +
                Astro.url.host +
                "/catchphrases/" +
                i +
                ".json"
        ).then((response) => response.json());
        Object.keys(json).forEach((k) => {
            if (!phrases[k]) phrases[k] = [];

            json[k].forEach((a) => phrases[k].push(a));
        });
        const temp = await fetch(
            Astro.url.protocol + "//" + Astro.url.host + "/events/" + i
        ).then((b) => b.text());
        events += temp.split("<body>")[1].split("</body>")[0];
    }
} else {
    phrases = await fetch(
        Astro.url.protocol +
            "//" +
            Astro.url.host +
            "/catchphrases/" +
            classYear +
            ".json"
    ).then((response) => response.json());
    events = await fetch(
        Astro.url.protocol + "//" + Astro.url.host + "/events/" + classYear
    ).then((b) => b.text());

    events = events.split("<body>")[1].split("</body>")[0];
}

function quoteFix(input) {
    let n = 0;
    return input.replace(/"/g, (m, i, og) => {
        return n++ % 2 ? "“" : "„";
    });
}
---

<Layout
    title={"Souhrn " + (classYear != 0 ? classYear + ". G" : "všeho")}
    description="Souhrn školního roku"
>
    <div class="body">
        <div id="udalosti">
            <details>
                <summary>Události</summary>
                <h2>Události</h2>
                <div set:html={events} />
            </details>
        </div>
        <div id="hlasky">
            <details>
                <summary>Hlášky</summary>
                <h2>Hlášky</h2>
                {
                    Object.keys(phrases).map((p) => (
                        <div class="teach">
                            <h3>{teachers[p]}</h3>{" "}
                            <ul>
                                {phrases[p].map((phrase) => (
                                    <li>{quoteFix(phrase)}</li>
                                ))}
                            </ul>
                        </div>
                    ))
                }
            </details>
        </div>

        <hr />
        Experiment: <a href={"/kronika/summary/download/" + classYear}
            >stáhnout jako csv</a
        >
    </div>

    <script>
        document
            .querySelector("#udalosti")
            .querySelectorAll("h1")
            .forEach((e) => {
                e.remove();
            });
    </script>
</BetaLayout>

<style>
    summary {
        background-color: var(--text-color);
        color: var(--background);
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: left;
        outline: none;
        font-size: 15px;
        margin-bottom: 1em;
        margin-right: 10px;
    }

    summary:hover {
        filter: sepia(20);
    }

    details[open] > summary {
        position: fixed;
        margin: 0px;
        top: 0px;
        z-index: 2;
        left: 0px;
    }
</style>
