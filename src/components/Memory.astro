---
import teachers from "../../public/teachers.json";

interface Props {
    title: string;
    events: string;
    phrases: any;
}

let {title, events, phrases} = Astro.props as Props;

let phraseList = [];
for (let teacher in phrases) {
    for (let phrase of phrases[teacher]) {
        phraseList.push({teacher, phrase});
    }
}

phraseList.sort(() => Math.random() - 0.5);

events = events.replace(/<h1[^>]*>[^<\\]*<\/h1>/g, "");
events = events.replace(/<hr[^>]*>/gm, "");

function quoteFix(input) {
    let n = 0;
    return input.replace(/"/g, (m, i, og) => {
        return n++ % 2 ? "“" : "„";
    });
}
---

<div class="memory">
    <h2>{title}</h2>
    <div class="phrases">
        {phraseList.map(({teacher, phrase}) => (
                <div class="phrase">
                    <h4>{teachers[teacher]}</h4>
                    <p>{quoteFix(phrase)}</p>
                </div>
        ))}
    </div>
    <div class="events">
        <div set:html={events} />
    </div>
</div>

<style>
    .memory {
        width: 210mm;
        height: auto;
        display: flex;
        flex-direction: column;
        padding: 3mm;
        border: 1px solid black;
        page-break-after: right;
        margin-bottom: 10px;
    }

    .phrases {
        page-break-after: always;
    }

    h2 {
        margin-bottom: 2px;
    }

    :global(h3) {
        page-break-inside: avoid;
    }

    :global(h3::after) {
        content: "";
        display: block;
        height: 100px;
        margin-bottom: -100px;
    }

    .phrase, :global(p) {
        page-break-inside: avoid;
    }

    @media print {
        .memory {
            border: none;
            padding: 0;
            margin: 0;
        }
    }
</style>