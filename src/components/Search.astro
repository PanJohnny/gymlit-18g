---
---

<a href="javascript:void(0)" id="searchButton">üîé</a>

<div id="searchWrapper" class="hidden inverted">
    <h3>Rychl√° navigace</h3>
    <input type="search" name="Tab" id="search" placeholder="Vyhledejte na str√°nce"> <a href="javascript:void(0)" id="submitSearch">‚û°</a>
    <ul id="searchResults">

    </ul>
    <div id="searchInfo">Napi≈°te hledan√© slovo a zm√°ƒçknƒõte <kbd>‚Üµ Enter</kbd>, nebo kliknut√≠m na tlaƒç√≠tko. Zav≈ôete pomoc√≠ kl√°vesy <kbd>Escape</kbd>, nebo opƒõtovn√Ωm kliknut√≠m na lupu.</div>
</div>

<script>
    const searchList = [
        {
            title: "√övod",
            alias: ["h", "d", "domov"],
            path: "/kronika"
        },
        {
            title: "Statistiky",
            alias: ["s", "stat"],
            path: "/kronika/stats"
        },
        {
            title: "V≈°echno",
            alias: ["0", "a"],
            path: "/kronika/summary/year/0"
        },
        {
            title: "Prima",
            alias: ["1"],
            path: "/kronika/summary/year/1"
        },
        {
            title: "Sekunda",
            alias: ["2"],
            path: "/kronika/summary/year/2"
        },
        {
            title: "Tercie",
            alias: ["3"],
            path: "/kronika/summary/year/3"
        },
        {
            title: "Kvarta",
            alias: ["4"],
            path: "/kronika/summary/year/4"
        },
        {
            title: "Kvinta",
            alias: ["5"],
            path: "/kronika/summary/year/5"
        },
        {
            title: "Sexta",
            alias: ["6"],
            path: "/kronika/summary/year/6"
        },
        {
            title: "Septima",
            alias: ["7"],
            path: "/kronika/summary/year/7"
        },

        {
            title: "Okt√°va",
            alias: ["8"],
            path: "/kronika/summary/year/8"
        }
    ]

    if (document.cookie.includes("auth")) {
        searchList.push({
            title: "Editor",
            alias: ["e"],
            path: "/kronika/editor"
        });
    }
    
    const teachers = await fetch("/teachers.json").then(res => res.json());

    Object.keys(teachers).forEach(k => {
        searchList.push({
            title: teachers[k],
            alias: [k],
            path: "/kronika/summary/teacher/" + k
        });
    });

    const searchW = document.querySelector("#searchWrapper");;

    // @ts-ignore
    const searchEl:HTMLInputElement = document.querySelector("#search");
    const resultsEl = document.querySelector("#searchResults");


    searchEl.addEventListener("keyup", quickSearch)

    function quickSearch(e) {
        const query = searchEl.value.trim().toLocaleLowerCase();
        let results = [];

        searchList.forEach(el => {
            const title = el.title;
            const alias = el.alias;

            if (title.toLocaleLowerCase().startsWith(query) || alias.includes(query)) { // @ts-ignore
                results.push(el);
            }
        });
        // @ts-ignore
        resultsEl.innerHTML = "";

        if (results.length > 0) {
            if (e.key == "Enter") {// @ts-ignore
                searchW.innerHTML = "<h2>P≈ôesmƒõrov√°v√°n√≠</h2>";// @ts-ignore
                location.href = results[0].path;
                return;
            }
            let i = 0;
            results.forEach(el => {
                if (i == 3)
                    return;
                i++;
                const li = document.createElement("li");
                // @ts-ignore
                resultsEl.appendChild(li);
                // @ts-ignore
                li.innerHTML = '<span class="search-title">' + el.title + '</span>';
            });
        }
    }

    document.addEventListener("keydown", (e) => {
        if (e.key == "Escape") {// @ts-ignore
            searchW.classList.add("hidden");
        }
    });
    // @ts-ignore
    document.querySelector("#searchButton").addEventListener("click", (e:MouseEvent) => {
        if (e.button == 0) {// @ts-ignore
            searchW.classList.toggle("hidden");// @ts-ignore
            if (!searchW.classList.contains("hidden")) {
                searchEl.focus();
            }
        }
    })
    // @ts-ignore
    document.querySelector("#submitSearch").addEventListener("click", (e:MouseEvent) => {
        if (e.button == 0) {
            const query = searchEl.value.trim().toLocaleLowerCase();
            let results = [];

            searchList.forEach(el => {
                const title = el.title;
                const alias = el.alias;

                if (title.toLocaleLowerCase().startsWith(query) || alias.includes(query)) {// @ts-ignore
                    results.push(el);
                }
            });
            // @ts-ignore
            searchW.innerHTML = "<h2>P≈ôesmƒõrov√°v√°n√≠</h2>";// @ts-ignore
            location.href = results[0].path;
        }
    })
</script>

<style>
    #searchWrapper {
        position: fixed;
        z-index: 2;
        border-style: solid;
        border-radius: 10px;
        border-color: var(--border-color);
        padding: 1em;
        border-width: 2px;

        top: 40vh;
        left: 50vw;
        transform: translate(-50%, -50%);
    }

    #search {
        outline: none;
        padding: 1em;
        border-radius: 15px;
    }

    #searchResults {
        list-style: none;
        padding-left: 0px;
        border: var(--background) 1px solid;
        border-radius: 4px;
        padding 2em;
        text-align: center;
    }

    #searchResults > li {
        padding: .5em;
        display: flex;
        justify-content: space-between;
    }

    .search-title {
        font-size: large;
    }

    .hidden {
        display: none !important;
    }

    #searchButton {
        z-index: 2;
        top: 1em;
        right: 1em;
        position: absolute;
        text-decoration: none;
    }

    #submitSearch {
        text-decoration: none;
        color: var(--decoration);
        border: 1px solid var(--background);
        padding: .2em;
        border-radius: 4px;
    }
</style>